// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String           @id @default(cuid())
  username        String           @unique
  password        String
  tests           UserTest[]
  vocabulary      Vocabulary[]
  dailyChallenges DailyChallenge[] // üëà Add this line
}

model Test {
  id        String   @id @default(cuid())
  title     String   @unique
  createdAt DateTime @default(now())

  questions Question[]
  userTests UserTest[]
}

model Question {
  id     String @id @default(cuid())
  test   Test   @relation(fields: [testId], references: [id])
  testId String

  number        Int // e.g. question 1, 2, 3...
  correctAnswer String // e.g. "A", "B", "C", "D"
  answers       UserAnswer[]
}

model UserTest {
  id     String @id @default(cuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String

  test   Test   @relation(fields: [testId], references: [id])
  testId String

  status      TestStatus @default(UNFINISHED)
  score       Int?
  timeTaken   Int?
  completedAt DateTime?

  createdAt DateTime @default(now())

  answers UserAnswer[] // ‚Üê new: user's answers to this test
}

model UserAnswer {
  id         String   @id @default(cuid())
  userTest   UserTest @relation(fields: [userTestId], references: [id])
  userTestId String

  question   Question @relation(fields: [questionId], references: [id])
  questionId String

  selectedAnswer String // e.g. "C"
}

model Vocabulary {
  id     String @id @default(cuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String

  word             String
  forgetCount      Int             @default(0)
  meaning          String? // new, nullable
  importance       Int? // new, nullable or default(1)
  DailyChallenge   DailyChallenge? @relation(fields: [dailyChallengeId], references: [id])
  dailyChallengeId String?

  @@unique([userId, word]) // Ensures unique word per user
}

model DailyChallenge {
  id     String @id @default(cuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String

  date       DateTime
  score      Int
  total      Int // e.g. 40
  createdAt  DateTime     @default(now())
  wrongWords Vocabulary[]
}

enum TestStatus {
  FINISHED
  UNFINISHED
}
